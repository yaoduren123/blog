---
import type { CollectionEntry } from "astro:content";
import { getPath } from "@/utils/getPath";

export interface Props {
  posts?: CollectionEntry<"blog">[];
  images?: string[];
  titles?: string[];
  descriptions?: string[];
  interval?: number; // 自动播放间隔，单位毫秒
  showControls?: boolean;
  showIndicators?: boolean;
  className?: string; // 添加自定义类名属性
  marginTop?: string; // 添加上边距控制属性
}

const { 
  posts = [],
  images = [], 
  titles = [], 
  descriptions = [], 
  showControls = true
} = Astro.props;

// 如果提供了文章列表，则使用文章信息
const carouselItems = posts.length > 0 
  ? posts.map(post => ({
      image: post.data.coverImg,
      title: post.data.title,
      description: post.data.description,
      link: getPath(post.id, post.filePath)
    }))
  : images.map((image, index) => ({
      image,
      title: titles[index] || '',
      description: descriptions[index] || '',
      link: ''
    }));
---

<div id="default-carousel" class="relative w-full" data-carousel="slide">
  <!-- Carousel wrapper -->
  <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
       <!-- Item 1 -->
        {
          carouselItems.map((item) => {
            return (
            <div class="hidden relative w-full h-full duration-700 ease-in-out" data-carousel-item>
                <a href={item.link}>
                  <img src={item.image} class="absolute block w-full h-full object-cover" alt={
                    item.title
                  } />
                  <span class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-white dark:text-gray-800 text-2xl font-alibaba-puhuiti-bold group-hover:text-accent dark:group-hover:text-accent group-focus:outline-none">{item.title}</span>
              </a>
            </div>
            )
          })
        }
  </div>
  <!-- Slider indicators -->
  {
    showControls && (
      <div class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
      {
        carouselItems.map((_item, index) => {
          return (
            <button type="button" class="w-3 h-3 rounded-full" aria-current="true" aria-label="Slide 1" data-carousel-slide-to={index}></button>
          )
        })
      }
    </div>
  )
  }
  
  <!-- Slider controls -->
  {
    showControls && (
      <>
        <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
                </svg>
                <span class="sr-only">Previous</span>
            </span>
        </button>
        <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
            <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
                <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                </svg>
                <span class="sr-only">Next</span>
            </span>
        </button>
      </>
    )
  }
</div>

<script is:inline>

function initCarouselComponents() {
  if (typeof window.initCarousels === 'function') {
    if (window.location.pathname === '/') {
      window.initCarousels();
    }
  }
}

  // 1. 首次页面加载时初始化
// document.addEventListener('astro:page-load', initCarouselComponents);

// 每次视图转换完成后重新初始化
document.addEventListener('astro:after-swap', initCarouselComponents);
  
</script>